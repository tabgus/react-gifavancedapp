{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGcA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEbC,mBAAS,IAFI,mBAE1CC,EAF0C,KAE9BC,EAF8B,KAoBjD,OACE,sBAAMC,SAba,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,GAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,KAEdA,EAAc,KAOhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SArBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,0DAE2CC,UAAWH,GAFtD,sDAGDI,MAAOF,GAHN,cAGfG,EAHe,gBAIAA,EAAKC,OAJL,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEvC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAErB,sBAAKgB,UAAU,yCAAf,UACE,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAMA,SCHCS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAChBd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAgB1C,OAVAC,qBAAW,WACT1B,EAAQC,GACL0B,MAAM,SAAAC,GACLH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGd,CAACtB,IAEGuB,EDd2BK,CAAc5B,GAAlCa,EADuB,EAC5BN,KAAae,EADe,EACfA,QAItB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDlB,IAClDsB,GAAW,mBAAGJ,UAAU,oCAAb,6BACb,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEbbkB,EAAe,WAAM,MAII3C,mBAAU,CAAC,cAJf,mBAIzB4C,EAJyB,KAIb7C,EAJa,KAYhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEI6C,EAAWrB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCnBlB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2b5596d9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const  AddCategory = ( {setCategories} )  =>{\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(inputValue.trim().length > 1){\r\n      setCategories( cats => [ inputValue, ...cats, ] );\r\n      setInputValue('');\r\n    }else{\r\n      setInputValue('');\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  return (\r\n    <form onSubmit ={handleSubmit}>\r\n      <input \r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes={\r\n  setCategories:PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI( category )}&api_key=LODZO27ZTXBEWBg8l1JtSuQbBcmCC083`;\r\n  const resp =  await fetch( url );\r\n  const {data} = await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }      \r\n  });\r\n\r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n  console.log(id, title, url);\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={ url } alt={ title} />\r\n      <p> { title }</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n  const  { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n      { loading && <p className=\"animate__animated animate__fadeIn\"> 'Cargando...' </p>}\r\n      <div className=\"card-grid\">\r\n          {\r\n              images.map( img => (\r\n                <GifGridItem \r\n                key={ img.id }\r\n                { ...img }\r\n                />\r\n              ))\r\n            }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n    getGifs(category)\r\n      .then( imgs => {\r\n        setState({\r\n          data: imgs, \r\n          loading: false\r\n        })\r\n      })\r\n  }, [category]);\r\n\r\n  return state; //{data[], loading:true}\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n  \r\n\r\n  //La siguiente linea es el useState\r\n  const [categories, setCategories] = useState( ['One Punch']);\r\n\r\n  // const handleAdd = () => {\r\n  //   //setCategories( [...categories, 'Hunters'] );\r\n  //   setCategories(cats => [...categories, 'Hunters']);\r\n  // }\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories= { setCategories }/>\r\n      <hr/>\r\n\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid \r\n            key={ category }\r\n            category={ category } \r\n            />\r\n            ))\r\n        }\r\n      </ol>\r\n    </>    \r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}